{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red41\green43\blue60;\red255\green255\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c21176\c22353\c30196;\cssrgb\c100000\c100000\c100000;\csgray\c0;
}
\margl1440\margr1440\vieww20700\viewh14240\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic.png \width8120 \height2980 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab720\ri360\parhyphenfactor20\partightenfactor0

\f1\b \cf2 \cb3 \expnd0\expndtw0\kerning0
Virtual Environments | Python | Pip\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\
Pipenv = pip + venv \
\
Venv - you create a isolated virtual environment for your project \
\
So each project will have different virtual environments. \
\
Virtual env1 for project 1\
\
- python 3.8\
- pyspark 3.2.1\
\
Virtual env2 for project 2\
\
- python 3.10\
- pyspark 3.5\
\
 - pip install pyspark\
 - pip install pytest\
\
#-=======+>\
\
Pip - to install additional packages (package management)\
\
Venv - a specific env for each project (Virtual environment). \
\
So each project will have its own version od python and packages.. \
\
To install pipenv.. \'97> pip install pipenv\
\
For any folder, or project, I can just do:\
\
 - Pipenv install package name (pyspark, or anything else). \
\
\
#=======>\
Old way vs new way.. \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 1.png \width10680 \height2940 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
New way.. \
\
I am saying - pipenv install pyspark;\
# doing above, the installation itself creates a virtual environment by itself.. \
\
# all the installations go in the piffle.. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 2.png \width13760 \height720 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 3.png \width12900 \height5080 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
The folder has the file pip file \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 4.png \width12300 \height8240 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
pipfile.lock tells the exact version of the files.. \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 5.png \width20040 \height9720 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
It\'92s an important file. \
\
Next if we do: - pipenv shell \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Pasted Graphic 6.png \width17620 \height1680 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Environment is activated at: \cf4 \CocoaLigature0  . /Users/luv/.local/share/virtualenvs/demo_project_pipenv-uIl3Z-gc/bin/activate\
\
\cf0 \CocoaLigature1 \
================================================\
\
 Install purest only in dev environment:  Pipenv install pytest \'97dev\
\
\
==============\
\
How to destroy the virtual environment that I have? \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\fs24 \cf0 {{\NeXTGraphic Pasted Graphic 7.png \width14000 \height720 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\fs24 \cf0 {{\NeXTGraphic Pasted Graphic 8.png \width8920 \height2780 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \
\
\
#=======>\
\
Problem Statement:\
\
I want to find the number of closed orders for each state. \
\
Files we have:\
\
 - orders.csv\
 - Customers.csv\
\
1. Create orders data frame\
2. Create customers data frame\
\
3. Filter the orders dataframe based on order status\
\
4. Join the orders filtered with customers (customer_id). \
\
5. Do a group by on state and do the aggregation. \
\
\
#=====>\
Setup a virtual environment for this and want pyspark to be installed. \
\
1. Open terminal (on Mac or windows), cd to the current folder\
2. On the terminal say pipenv install pyspark\
3  once done type : pipenv shell. \
4. Check the python version : python \'97version\
5. If the above steps are working, then the virtual environment is running fine. \
\
#=========+>\
Project Structuring. \
\
Project Folder Name\
	\
	- configs folder\
	\
		- application.conf \
\
		customers.file.path = /users/Desktop/\'85. \
		(to keep the project level configurations, like keep file path etc.)\
		\
		- pyspark.conf ( to give spark level configs, like executor cores, executor memory, 							application, name etc..).. \
		\
\
	- lib folder\
\
		- ConfigReader.py (all the .conf files can be read) from the config folder. \
		- DataReader.py (to create spark dataframes)\
		- DataManipulation.py (all the pyspark transformations)\
		- Utils.py (creating Spark session). \
\
\
	- data folder\
\
		- orders.csv\
		- customers.csv\
\
	- application_main.py (main method, entry point for the spark application). \
\
	- Pipfile (automatically generated when doing pipenv install pyspark)\
\
	- Pipfile.lock (automatically generated, along with pipfile)\
\
\
\
\
\
\
\
\
\
}